#ifndef FTL_MUONISO_TREE
#define FTL_MUONISO_TREE

#include "ExternalTools/DynamicTTree/interface/DynamicTTreeBase.h"

using namespace std;

//---Define the TTree branches
#define DYNAMIC_TREE_NAME FTLMuonIsoTree

#define DATA_TABLE                              \
    DATA(int, event)                            \
    DATA(int, lumi)                             \
    DATA(int, run)                              \
    DATA(int, iEvent)                           \
    DATA(float, pt)                             \
    DATA(float, eta)                            \
    DATA(float, phi)                            \
    DATA(float, px)                             \
    DATA(float, py)                             \
    DATA(float, pz)                             \
    DATA(float, vx)                          \
    DATA(float, vy)                          \
    DATA(float, vz)                          \
    DATA(float, t0)                          \
    DATA(float, t0err)                          \
    DATA(float, muonT)                          \
    DATA(float, muonTreso)                      \
    DATA(bool, isLooseMuon)                     \
    DATA(bool, isMediumMuon)                    \
    DATA(bool, isTightMuon)                     \
    DATA(bool, genMatched)                      \
    DATA(bool, genMatchedPrompt)                \
    DATA(bool, genMatchedJet)                   \
    DATA(int, globalMatchPartId)                      \
    DATA(float, globalMatchPartVtxX)                  \
    DATA(float, globalMatchPartVtxY)                  \
    DATA(float, globalMatchPartVtxZ)                  \
    DATA(float, genPt)                          \
    DATA(float, genEta)                         \
    DATA(float, genPhi)                         \
    DATA(float, genJetE)                           \
    DATA(float, genJetPt)                          \
    DATA(float, genJetEta)                         \
    DATA(float, genJetPhi)                         \
    DATA(float, simPVX)                         \
    DATA(float, simPVY)                         \
    DATA(float, simPVZ)                         \
    DATA(float, simPVT)                         \
    DATA(unsigned int,   nTracksZCut)           \
    DATA(unsigned int,   nTracksZTCut)          \
    DATA(bool, hasLinkedVtx3D)                  \
    DATA(unsigned int, nVtx3D)                  \
    DATA(unsigned int, vtx3DIdx)                \
    DATA(unsigned int, nTracksVtx3D)            \
    DATA(float, vtx3DX)                         \
    DATA(float, vtx3DY)                         \
    DATA(float, vtx3DZ)                         \
    DATA(float, IP3DVtx3D)                      \
    DATA(float, dIP3DVtx3D)                     \
    DATA(float, vtx3DNdof)                      \
    DATA(float, vtx3DChi2)                      \
    DATA(bool, vtx3DIsFake)                     \
    DATA(bool, hasLinkedVtx4D)                  \
    DATA(unsigned int, nVtx4D)                  \
    DATA(unsigned int, vtx4DIdx)                \
    DATA(unsigned int, nTracksVtx4D)            \
    DATA(float, vtx4DX)                         \
    DATA(float, vtx4DY)                         \
    DATA(float, vtx4DZ)                         \
    DATA(float, vtx4DT)                         \
    DATA(float, vtx4DTerr)                      \
    DATA(float, IP3DVtx4D)                      \
    DATA(float, dIP3DVtx4D)                     \
    DATA(float, vtx4DNdof)                      \
    DATA(float, vtx4DChi2)                      \
    DATA(bool, vtx4DIsFake)

#define DATA_CLASS_TABLE                                \
    DATA(std::vector<float>, chIsoDR)                   \
    DATA(std::vector<float>, chIsoZCut)                 \
    DATA(std::vector<float>, chIsoZTCut_3sigma)         \
    DATA(std::vector<float>, chIsoZTCut_4sigma)         \
    DATA(std::vector<float>, chIsoZTCut_5sigma)         \
    DATA(std::vector<float>, chIsoZTCut_7sigma)         \
    DATA(std::vector<float>, chIsoZTCut_10sigma)        \
    DATA(std::vector<float>, tracksZCut_pt)       \
    DATA(std::vector<float>, tracksZCut_eta)      \
    DATA(std::vector<float>, tracksZCut_phi)      \
    DATA(std::vector<float>, tracksZCut_dR)       \
    DATA(std::vector<float>, tracksZCut_t)        \
    DATA(std::vector<float>, tracksZCut_dz)       \
    DATA(std::vector<float>, tracksZTCut_pt)       \
    DATA(std::vector<float>, tracksZTCut_eta)      \
    DATA(std::vector<float>, tracksZTCut_phi)      \
    DATA(std::vector<float>, tracksZTCut_dR)       \
    DATA(std::vector<float>, tracksZTCut_t)        \
    DATA(std::vector<float>, tracksZTCut_dz)        


#include "ExternalTools/DynamicTTree/interface/DynamicTTreeInterface.h"

#endif

    

